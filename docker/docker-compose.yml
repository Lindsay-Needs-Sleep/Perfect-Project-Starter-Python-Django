# requires a valid docker-compose.override.yml to work

name: longprojectname

services:

    postgres:
        image: postgres:15.2
        environment:
            - PGDATA=/postgresql/data
        volumes:
            - type: volume
              source: postgres-data
              target: /postgresql/data
              volume:
                  nocopy: true

    python:
        image: shortprojectname.python:0.0
        build:
            context: ../
            dockerfile: ./docker/python.Dockerfile
            args:
                - USER_UID=${CURRENT_HOST_USER_UID}
                - USER_GID=${CURRENT_HOST_USER_GID}
                - USERNAME=py
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /shortprojectname/src
        volumes:
            - type: volume
              source: back-src-volume
              target: /shortprojectname/src
            - type: volume
              source: public-src-volume
              target: /shortprojectname/public
        ports:
            - "8080:8000"
        depends_on:
            - postgres

    front-components:
        image: node:18
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /front_components
        volumes:
            - type: volume
              source: front-components-src-volume
              target: /front_components
            - type: volume
              source: public-src-volume
              target: /front_components/public

    node-program:
        image: node:18
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /node_src
        volumes:
            - type: volume
              source: node-program-src-volume
              target: /node_src
            - type: volume
              source: shared-volume
              target: /node_src/shared_volume

volumes:
    postgres-data:


