# requires a valid docker-compose.override.yml to work

name: projectname

services:

    postgres-con:
        image: postgres:15.2
        environment:
            - PGDATA=/postgresql/data
        env_file:
            - ./postgres.env
        volumes:
            - type: volume
              source: postgres-data
              target: /postgresql/data
              volume:
                  nocopy: true

    django-con:
        image: projectname.python:0.0
        build:
            context: ../
            dockerfile: ./docker/python.Dockerfile
            args:
                - USER_UID=${CURRENT_HOST_USER_UID}
                - USER_GID=${CURRENT_HOST_USER_GID}
                - USERNAME=py
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /proj/src
        volumes:
            - type: volume
              source: django-src-volume
              target: /proj/src
            - type: volume
              source: public-src-volume
              target: /proj/public
        ports:
            - "8080:8000"
        depends_on:
            - postgres-con

    vite-con:
        image: node:18
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /proj
        volumes:
            - type: volume
              source: vite-src-volume
              target: /proj
            - type: volume
              source: public-src-volume
              target: /proj/public
            - type: volume
              source: shared-volume
              target: /proj/shared_volume

    node-con:
        image: node:18
        user: ${CURRENT_HOST_USER_UID}:${CURRENT_HOST_USER_GID}
        working_dir: /proj
        volumes:
            - type: volume
              source: node-src-volume
              target: /proj
            - type: volume
              source: shared-volume
              target: /proj/shared_volume

volumes:
    postgres-data:


